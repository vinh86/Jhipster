package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JhipsterAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJhipsterAllPropertiesEquals(Jhipster expected, Jhipster actual) {
        assertJhipsterAutoGeneratedPropertiesEquals(expected, actual);
        assertJhipsterAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJhipsterAllUpdatablePropertiesEquals(Jhipster expected, Jhipster actual) {
        assertJhipsterUpdatableFieldsEquals(expected, actual);
        assertJhipsterUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJhipsterAutoGeneratedPropertiesEquals(Jhipster expected, Jhipster actual) {
        assertThat(expected)
            .as("Verify Jhipster auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJhipsterUpdatableFieldsEquals(Jhipster expected, Jhipster actual) {
        assertThat(expected)
            .as("Verify Jhipster relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getClosed()).as("check closed").isEqualTo(actual.getClosed()))
            .satisfies(e -> assertThat(e.getSetting()).as("check setting").isEqualTo(actual.getSetting()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJhipsterUpdatableRelationshipsEquals(Jhipster expected, Jhipster actual) {}
}
